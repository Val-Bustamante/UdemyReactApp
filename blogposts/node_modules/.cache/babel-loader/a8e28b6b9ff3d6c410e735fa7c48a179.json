{"ast":null,"code":"var _jsxFileName = \"/Users/valentinabustamante/Documents/UdemyReactApp/blogposts/src/components/PostList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions';\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  render() {\n    console;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"PostList\");\n  }\n\n} //posts key was assigned to postReducer\n//will hold all data that reducer has returned\n\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n}; //fetchPosts becomes props in the component\n\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(PostList);","map":{"version":3,"sources":["/Users/valentinabustamante/Documents/UdemyReactApp/blogposts/src/components/PostList.js"],"names":["React","connect","fetchPosts","PostList","Component","componentDidMount","props","render","console","mapStateToProps","state","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AAClCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,UAAX;AACH;;AACDK,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH;;AAXiC,C,CActC;AACA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHC,IAAAA,KAAK,EAACD,KAAK,CAACC;AADT,GAAP;AAGC,CAJD,C,CAKA;;;AACA,eAAeV,OAAO,CAACQ,eAAD,EAAkB;AAACP,EAAAA,UAAU,EAACA;AAAZ,CAAlB,CAAP,CAAkDC,QAAlD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchPosts} from '../actions'\n\nclass PostList extends React.Component{\n    componentDidMount(){\n        this.props.fetchPosts();\n    }\n    render(){\n        console\n        return (\n            <div>\n                PostList\n            </div>\n        )\n    }\n}\n\n//posts key was assigned to postReducer\n//will hold all data that reducer has returned\nconst mapStateToProps = (state) => {\nreturn {\n    posts:state.posts\n}\n}\n//fetchPosts becomes props in the component\nexport default connect(mapStateToProps, {fetchPosts:fetchPosts})(PostList);"]},"metadata":{},"sourceType":"module"}