{"ast":null,"code":"var _jsxFileName = \"/Users/valentinabustamante/Documents/UdemyReactApp/songsapp/src/components/SongList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../action';\n\nclass SongList extends React.Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: song.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        onClick: () => this.props.selectSong(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Select\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, song.title));\n    });\n  }\n\n  render() {\n    //this.props === {songs: state.songs}\n    return React.createElement(\"div\", {\n      className: \"ui divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.renderList());\n  }\n\n} //take state object (data in redux Store), and \n//run calculations on it that will make it show up as props inside our component\n//state = current selected song and song list\n\n\nconst mapStateToProps = state => {\n  //always returns an object that will show up as props inside component\n  return {\n    songs: state.songs,\n    selectSong: state.selectSong\n  };\n}; //Connect function that reaches up and gets the list of songs\n//connect is a function that returns a function\n//Connect will always be called and component will always be second arg\n\n\nexport default connect(mapStateToProps, {\n  selectSong: selectSong\n})(SongList);","map":{"version":3,"sources":["/Users/valentinabustamante/Documents/UdemyReactApp/songsapp/src/components/SongList.js"],"names":["React","connect","selectSong","SongList","Component","renderList","props","songs","map","song","title","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACnCC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAClC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,SAAS,EAAC,mBADV;AAEA,QAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWJ,UAAX,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BO,IAAI,CAACC,KAA/B,CARJ,CADJ;AAYH,KAbM,CAAP;AAcH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,UAAL,EADL,CADJ;AAKH;;AAxBkC,C,CA2BvC;AACA;AACA;;;AACA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA,SAAO;AACHN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHL,IAAAA,UAAU,EAAEW,KAAK,CAACX;AAFf,GAAP;AAIH,CAND,C,CAQA;AACA;AACA;;;AACA,eAAeD,OAAO,CAACW,eAAD,EAAkB;AACpCV,EAAAA,UAAU,EAAEA;AADwB,CAAlB,CAAP,CAEZC,QAFY,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectSong } from '../action'\n\nclass SongList extends React.Component {\n    renderList() {\n        return this.props.songs.map((song) => {\n            return (\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                        <button \n                        className=\"ui button primary\"\n                        onClick={() => this.props.selectSong()}>\n                            Select\n                        </button>\n                    </div>\n                    <div className=\"content\">{song.title}</div>\n                </div>\n            )\n        })\n    }\n    render() {\n        //this.props === {songs: state.songs}\n        return (\n            <div className=\"ui divided list\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\n//take state object (data in redux Store), and \n//run calculations on it that will make it show up as props inside our component\n//state = current selected song and song list\nconst mapStateToProps = (state) => {\n    //always returns an object that will show up as props inside component\n    return {\n        songs: state.songs,\n        selectSong: state.selectSong\n    }\n}\n\n//Connect function that reaches up and gets the list of songs\n//connect is a function that returns a function\n//Connect will always be called and component will always be second arg\nexport default connect(mapStateToProps, {\n    selectSong: selectSong\n})(SongList);\n\n\n"]},"metadata":{},"sourceType":"module"}