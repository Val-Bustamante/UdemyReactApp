{"ast":null,"code":"var _jsxFileName = \"/Users/valentinabustamante/Documents/UdemyReactApp/songsapp/src/components/SongList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass SongList extends React.Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: song.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"Sleect\")));\n    });\n  }\n\n  render() {\n    //this.props === {songs: state.songs}\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n} //take state object (data in redux Store), and \n//run calculations on it that will make it show up as props inside our component\n//state = current selected song and song list\n\n\nconst mapStateToProps = state => {\n  //always returns an object that will show up as props inside component\n  return {\n    songs: state.songs\n  };\n}; //Connect function that reaches up and gets the list of songs\n//connect is a function that returns a function\n//Connect will always be called and component will always be second arg\n\n\nexport default connect(mapStateToProps)(SongList);","map":{"version":3,"sources":["/Users/valentinabustamante/Documents/UdemyReactApp/songsapp/src/components/SongList.js"],"names":["React","connect","SongList","Component","renderList","props","songs","map","song","title","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAS;AACjC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CADJ;AAOH,KARM,CAAP;AASH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAnBkC,C,CAsBvC;AACA;AACA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA,SAAO;AACHN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADV,GAAP;AAGH,CALD,C,CAOA;AACA;AACA;;;AACA,eAAeL,OAAO,CAACU,eAAD,CAAP,CAAyBT,QAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nclass SongList extends React.Component {\n    renderList(){\n        return this.props.songs.map((song)=> {\n            return(\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                        <button className=\"ui button primary\">Sleect</button>\n                    </div>\n                </div>\n            )\n        })\n    }\n    render() {\n        //this.props === {songs: state.songs}\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\n//take state object (data in redux Store), and \n//run calculations on it that will make it show up as props inside our component\n//state = current selected song and song list\nconst mapStateToProps = (state) => {\n    //always returns an object that will show up as props inside component\n    return {\n        songs: state.songs\n    }\n}\n\n//Connect function that reaches up and gets the list of songs\n//connect is a function that returns a function\n//Connect will always be called and component will always be second arg\nexport default connect(mapStateToProps)(SongList);\n\n\n"]},"metadata":{},"sourceType":"module"}